---
# tasks file for common

# On these pi's, they default to 4G which is abysmally low, expand them

- name: Expand partition
  ansible.builtin.command:
    cmd: growpart /dev/mmcblk0 3
  become: true
  ignore_errors: true

- name: Resize Btrfs filesystem
  ansible.builtin.command:
    cmd: btrfs filesystem resize max /
  become: true

- name: Add DNS hosts for k3s nodes
  ansible.builtin.lineinfile:
    path: /etc/hosts
    insertafter: EOF
    line: "{{ item.line }}"
# Yes, it's hardcoded. I'll fix it later. Besides a real engineer would use
# DNS. 
  loop:
    - { line: '10.50.0.69      sd-pi-02 pidb pgsql nfs01' }
    - { line: '10.50.0.65      k3s01' }
    - { line: '10.50.0.66      k3s02' }
    - { line: '10.50.0.67      k3s03' }
    - { line: '10.50.0.68      k3s04' }
    - { line: '10.50.0.70      k3s05' }
    - { line: '10.50.0.50      ztp' }
  become: true

- name: Update all packages
  ansible.builtin.yum:
    name: '*'
    state: latest
  register: yumcommandout
  become: true
- name: Fail if yum can't upgrade
  fail:
    msg: "yum command produced errors"
  when: yumcommandout is not defined

- name: Install missing packages
  ansible.builtin.yum:
    name: 
      - epel-release 
      - jq 
      - rsync 
      - tree 
      - iptables-utils 
      - nfs-utils
    state: present
  become: true
  
- name: Fail if yum can't install required packages
  fail:
    msg: "yum command produced errors"
  when: yumcommandout is not defined

- name: check to see if we need a reboot
  command: needs-restarting -r
  register: result
  ignore_errors: yes
  become: true
  
- name: Reboot Server if Necessary
  ansible.builtin.reboot:
    reboot_timeout: 180
  become: true
  when: result.rc == 1

- name: Create directory to mount NFS
  ansible.builtin.file:
    path: "{{ nfsmountpath }}"
    state: directory
    mode: '0755'
  become: true

- name: Add NFS Mount point if doesn't exist to /etc/fstab
  ansible.builtin.lineinfile:
    path: /etc/fstab
    insertafter: EOF
    line: '{{ nfshostname }}:{{ nfsexportpath }}   {{ nfsmountpath }}   nfs   defaults 0 0'
  become: true

- name: Perform daemon-reload with systemd
  ansible.builtin.systemd_service:
    daemon_reload: true
  become: true

- name: Mount the new file system
  ansible.builtin.mount:
    src: "{{ nfshostname }}:{{ nfsexportpath }}"
    path: "{{ nfsmountpath }}"
    state: mounted
    fstype: nfs
  become: true

- name: Touch a file to ensure that we can write to it
# touch /mnt/nfs/your-mom
  ansible.builtin.file:
    path: "{{ nfsmountpath }}/your-mom"
    state: touch