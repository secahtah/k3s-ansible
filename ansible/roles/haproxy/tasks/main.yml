---
# tasks file for haproxy
# install 
- name: install packages needed for this role
  ansible.builtin.yum:
    name: 
      - haproxy 
      - keepalived
    state: present
  become: true

# copy over modified keepalived and haproxy config files
- name: copy over keepalived and haproxy config files
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - src: haproxy.cfg
      dest: "/etc/haproxy/haproxy.cfg"
    - src: keepalived.conf
      dest: "/etc/keepalived/keepalived.conf"
  become: true

# edit keepalived file with variables
- name: edit keepalived config file and replace variables
  ansible.builtin.replace:
    path: /etc/keepalived/keepalived.conf
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  loop: 
    - regexp: "KUBEAPI_VRRP_CHECK_INTERVAL"
      replace: "{{ kubeapi_vrrp_check_interval }}"
    - regexp: "KUBEAPI_VRRP_DECREMENT"
      replace: "{{ kubeapi_vrrp_decrement }}"
    - regexp: "KUBEAPI_VRRP_STATE"
      replace: "{{ kubeapi_vrrp_state }}"
    - regexp: "KUBEAPI_VRRP_PRIORITY"
      replace: "{{ kubeapi_vrrp_priority }}"
    - regexp: "KUBEAPI_VIRTUAL_ROUTER_ID"
      replace: "{{ kubeapi_virtual_router_id }}"
    - regexp: "KUBEAPI_VIRTUAL_IPADDRESS"
      replace: "{{ kubeapi_virtual_ipaddress }}/{{ kubeapi_virtual_ipaddress_prefixlength }}"
  become: true

# edit haproxy file with variables
- name: edit haproxy config file and replace variables
  ansible.builtin.replace:
    path: /etc/haproxy/haproxy.cfg
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  loop: 
    - regexp: "HAPROXY_KUBEAPI_CHECK_INTERVAL"
      replace: "{{ haproxy_kubeapi_check_interval }}"
    - regexp: "HAPROXY_KUBEAPI_DOWN_INTERVAL"
      replace: "{{ haproxy_kubeapi_down_interval }}"
    - regexp: "K3S_SERVER_1_IP_ADDRESS"
      replace: "{{ k3s_server_1_ip_address }}"
    - regexp: "K3S_SERVER_2_IP_ADDRESS"
      replace: "{{ k3s_server_2_ip_address }}"
    - regexp: "K3S_SERVER_3_IP_ADDRESS"
      replace: "{{ k3s_server_3_ip_address }}"
  become: true

# correct the haproxy service file "After" unit definition
- name: correct haproxy service file to resolve race condition - pt 1
  ansible.builtin.replace:
    path: /usr/lib/systemd/system/haproxy.service
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  loop:
    - regexp: "After=network-online.target"
      replace: "After=network-online.target keepalived.service"
  become: true

# correct the haproxy service file "Requires" unit definition
- name: correct haproxy service file to resolve race condition - pt 2
  ansible.builtin.lineinfile:
    path: /usr/lib/systemd/system/haproxy.service
    insertafter: "After=network-online.target keepalived.service"
    line: "Requires=keepalived.service"
  become: true

# make sure systemd re-reads changes to service files
- name: Perform daemon-reload with systemd
  ansible.builtin.systemd_service:
    daemon_reload: true
  become: true

# Enable keepalived
- name: enable and start keepalived service
  ansible.builtin.systemd_service:
    name: keepalived
    state: started
    enabled: true
  become: true

# Enable haproxy
- name: enable and start haproxy service
  ansible.builtin.systemd_service:
    name: haproxy
    state: started
    enabled: true
  become: true

# Well, now that was super fun wasn't it.
